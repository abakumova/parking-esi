server.port=8089

spring.application.name=api-gateway
spring.cloud.discovery.enabled=true

eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka

# In some cases, it is preferable for Eureka to advertise the IP addresses of services rather than the hostname.
# This can be done by settinh eureka.instance.preferIpAddress to true and,
# when the application registers with eureka, it uses its IP address rather than its hostname.
eureka.client.instance.preferIpAddress = true


# The logging level can be one  TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF.
# The root logger can be configured using logging.level.root.
logging.level.root= INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE


################ Discover Server #####################
#  route id
#spring.cloud.gateway.routes[0].id=discovery-server
#  route uri
#spring.cloud.gateway.routes[0].uri=http://localhost:8761
#spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/web
#spring.cloud.gateway.routes[0].filters[0]=SetPath=/


# Route configuration for each microservice
spring.cloud.gateway.routes[0].id=analytics-service
spring.cloud.gateway.routes[0].uri=lb://ANALYTICS-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/analytics/**

spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=lb://BOOKING-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/bookings/**

spring.cloud.gateway.routes[2].id=location-service
spring.cloud.gateway.routes[2].uri=lb://LOCATION-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/location/**

spring.cloud.gateway.routes[3].id=parking-management-service
spring.cloud.gateway.routes[3].uri=lb://PARKING-MANAGEMENT-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/parking-slots/**

spring.cloud.gateway.routes[4].id=payment-service
spring.cloud.gateway.routes[4].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/make-payment/**

spring.cloud.gateway.routes[5].id=user-management-service
spring.cloud.gateway.routes[5].uri=lb://USER-MANAGEMENT-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/**

spring.datasource.url: jdbc:postgresql://localhost:5432/gateway_db
spring.datasource.username: postgres
spring.datasource.password: postgres
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto: update

#########complete the configeration for inventory-service
####### inventory-service #######
#spring.cloud.gateway.routes[2].id=inventory-service

spring.main.web-application-type=reactive

spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*